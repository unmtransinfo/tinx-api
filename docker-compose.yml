secrets:
  mysql_password:
    environment: DB_PASSWORD
volumes:
  nginx:
  static_files_tinx:
  cert:
services:
  tinx_ui:
    build:
      context: https://github.com/unmtransinfo/tinx-ui.git#TINX-35
    command: npm run build
    environment:
      - NODE_OPTIONS=--openssl-legacy-provider
    volumes:
      - static_files_tinx:/app/dist
  tinx_api:
    build:
      context: .
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - DB_USER=tcrd_read_only
    volumes:
      - ./tinxapi/tinxapi/secrets.example.py:/tinx/tinxapi/tinxapi/secrets.py
    secrets:
      - mysql_password
  nginx:
    image: nginx:1
    volumes:
      - static_files_tinx:/usr/share/nginx/html/static_files_tinx:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - ${TINX_NGINX_SSL_PORT:-443}:443
      - ${TINX_NGINX_HTTP_PORT:-80}:80
    depends_on:
      tinx_api:
        condition: service_started
      tinx_ui:
        condition: service_completed_successfully
      # certbot:
      #   condition: service_completed_successfully
  mysql:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_USER=tcrd_read_only
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
      - MYSQL_DATABASE=tcrd
      - MYSQL_RANDOM_ROOT_PASSWORD=true
    secrets:
      - mysql_password
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 20
    volumes:
      - ${DATABASE_VOLUME_PATH:-./db}:/var/lib/mysql
  # certbot:
  #   image: neilpang/acme.sh
  #   volumes:
  #     - cert:/out
  #   command: --issue -d example.com  --dns dns_cf

